name: Build and Upload Resource Packs

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-and-upload:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Releaseアップロードに必要

    steps:
      - name: 📦 Checkout code
        uses: actions/checkout@v4

      - name: 🐳 Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: 🔧 Install make, jq, gh CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y make jq gh

      - name: 📥 Get release asset list
        id: get_assets
        run: |
          tag="${GITHUB_REF##*/}"
          gh release view "$tag" --json assets --jq '.assets[].name' > existing_assets.txt || touch existing_assets.txt
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 🧰 Install Composer dependencies
        run: docker compose run --rm laravel-cli composer install --no-interaction --no-progress --prefer-dist

      - name: 🔄 Loop and pack changed files only
        run: |
          for json in translated/*/*/lang/ja_jp.json; do
            [ -f "$json" ] || continue
            name=$(basename $(dirname $(dirname "$json")))
            ver=$(basename $(dirname $(dirname $(dirname "$json"))))
            zipname="${name}-translate-to-japanese-${ver}.zip"
            zip="build/resourcepacks/$zipname"

            # パック対象判定: zipがない or jsonが新しい
            if grep -Fxq "$zipname" existing_assets.txt; then
              echo "✅ Already uploaded: $zipname → skipping"
              continue
            fi

            if [ ! -f "$zip" ] || [ "$json" -nt "$zip" ]; then
              echo "🔨 Packing $zipname..."
              make pack NAME="$name" VER="$ver"
            else
              echo "♻️ Up-to-date: skipping $zipname"
            fi
          done

      - name: 🔄 Run translate:pack-all for all versions
        run: |
          for ver in $(find translated -mindepth 1 -maxdepth 1 -type d -exec basename {} \;); do
            echo "🛠  Building translated-all-in-$ver.zip"
            make pack-all VER=$ver
          done

      - name:  Upload new zips to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: build/resourcepacks/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Delete all but the latest release
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const releases = await github.rest.repos.listReleases({
              owner: context.repo.owner,
              repo: context.repo.repo,
              per_page: 2,
            });

            const [latest, ...oldReleases] = releases.data;

            for (const release of oldReleases) {
              console.log(`Deleting release: ${release.tag_name}`);
              await github.rest.repos.deleteRelease({
                owner: context.repo.owner,
                repo: context.repo.repo,
                release_id: release.id,
              });
            }

      - name:  Generate index.json using tagged release
        run: |
          TAG="${GITHUB_REF##*/}"
          BASE_URL="https://github.com/${{ github.repository }}/releases/download/${TAG}"
          docker compose run --rm --user $(id -u):$(id -g) laravel-cli \
            php artisan translate:list-json --base-url="${BASE_URL}"

      - name: 🚀 Deploy public/ to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./src/public
          publish_branch: gh-pages
          force_orphan: true